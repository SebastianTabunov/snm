#!/bin/sh
set -e

echo "üîß Starting database migrations..."

# –§–æ—Ä–º–∏—Ä—É–µ–º DATABASE_URL –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–∞
if [ -z "$DATABASE_URL" ]; then
  export DATABASE_URL="postgres://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=$DB_SSLMODE"
fi

echo "üìä Using database: $DB_HOST:$DB_PORT/$DB_NAME"

# –ñ–¥–µ–º –ø–æ–∫–∞ PostgreSQL –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
for i in $(seq 1 30); do  # –£–≤–µ–ª–∏—á–∏–ª –¥–æ 30 –ø–æ–ø—ã—Ç–æ–∫
  if pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER"; then
    echo "‚úÖ Database is ready!"
    break
  fi
  echo "‚è≥ Waiting for database... ($i/30)"
  sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ
if ! pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER"; then
  echo "‚ùå Database connection failed after 60 seconds"
  echo "üîç Debug info:"
  echo "DB_HOST: $DB_HOST"
  echo "DB_PORT: $DB_PORT"
  echo "DB_USER: $DB_USER"
  exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ Applying migrations..."
migrate -path /app/migrations -database "$DATABASE_URL" up

if [ $? -eq 0 ]; then
  echo "‚úÖ Migrations completed successfully!"
else
  echo "‚ùå Migrations failed!"
  exit 1
fi
